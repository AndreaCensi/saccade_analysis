#LyX 2.0.0alpha6 created this file. For more info see http://www.lyx.org/
\lyxformat 400
\begin_document
\begin_header
\textclass amsart
\use_default_options true
\begin_modules
theorems-ams
eqs-within-sections
figs-within-sections
\end_modules
\maintain_unincluded_children false
\language english
\inputencoding auto
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family default
\use_xetex false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry false
\use_amsmath 1
\use_esint 1
\use_mhchem 1
\use_mathdots 1
\cite_engine basic
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Standard
Suppose we have a sequence consisting of the symbols 
\begin_inset Quotes eld
\end_inset

L
\begin_inset Quotes erd
\end_inset

 and 
\begin_inset Quotes eld
\end_inset

R
\begin_inset Quotes erd
\end_inset

 (
\begin_inset Quotes eld
\end_inset

left
\begin_inset Quotes erd
\end_inset

 and 
\begin_inset Quotes eld
\end_inset

right
\begin_inset Quotes erd
\end_inset

).
 We want to investigate the statistical properties of such a sequence.
\end_layout

\begin_layout Subsection
Fairness test
\end_layout

\begin_layout Standard
The first aspect that we want to check is whether the sequence is fair.
 Let:
\begin_inset Formula \[
N=\mbox{sequence length }\]

\end_inset


\begin_inset Formula \[
p=\mbox{probability of obtaining a "L" }\]

\end_inset


\begin_inset Formula \[
n_{L}=\mbox{number of "L" in the sequence}\]

\end_inset

If the events are independent, the variable 
\begin_inset Formula $n_{L}$
\end_inset

 is distributed according to a Binomial distribution.
 We write
\begin_inset Formula \begin{equation}
n_{L}\sim\mbox{Bernouilli}(N,p_{L})\end{equation}

\end_inset


\end_layout

\begin_layout Standard
Meaning that the probability density function is
\begin_inset Formula \[
p(\{n_{L}=k\})={N \choose k}\, p_{L}^{k}(1-p_{L})^{N-k}\]

\end_inset


\end_layout

\begin_layout Standard
In scipy, a two-sided p-value test can be done with:
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

from scipy.stats import binom_test
\end_layout

\begin_layout Plain Layout

# Rejecting fairness
\end_layout

\begin_layout Plain Layout

fair_pvalue = binom_test(n_L, N, 0.5)
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Independence test, with known 
\begin_inset Formula $p_{L}$
\end_inset


\end_layout

\begin_layout Standard
We consider now the null hypothesis: 
\begin_inset Quotes eld
\end_inset

The sequence is composed by independent samples from the same Bernoulli
 distribution (not necessarily with 
\begin_inset Formula $p=0.5$
\end_inset

).
\begin_inset Quotes erd
\end_inset

 In other words, while we acknoweledge that a fly can be biased to turn
 in a certain direction, we exclude that the direction of a turn influences
 the next.
 
\end_layout

\begin_layout Standard
What this model predict is that the probability of 
\begin_inset Formula $L$
\end_inset

 is the same whether the previous value was 
\begin_inset Formula $R$
\end_inset

 or 
\begin_inset Formula $L$
\end_inset

:
\begin_inset Formula \begin{equation}
p(\{x_{k}=L\}|\{x_{k-1}=R\})=p_{L}\end{equation}

\end_inset


\begin_inset Formula \begin{equation}
p(\{x_{k}=L\}|\{x_{k-1}=L\})=p_{L}\end{equation}

\end_inset


\end_layout

\begin_layout Standard
Assume for a moment that we knew the probability
\begin_inset space ~
\end_inset


\begin_inset Formula $p_{L}$
\end_inset

.
 Under the null hypothesis, we would have the following predictions:
\begin_inset Formula \begin{equation}
n_{RL}\sim\mbox{Bernouilli}(n_{R},p_{L})\end{equation}

\end_inset


\begin_inset Formula \begin{equation}
n_{LL}\sim\mbox{Bernouilli}(n_{L},p_{L})\end{equation}

\end_inset

Therefore, we could execute Thus we have two independent tests.
 In code:
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

# rejecting independence, if we knew p_L 
\end_layout

\begin_layout Plain Layout

RL_pvalue = binom_test(n_RL, n_R, p_L)
\end_layout

\begin_layout Plain Layout

LL_pvalue = binom_test(n_LL, n_L, p_L)
\end_layout

\begin_layout Plain Layout

independent_pvalue = min( [ RL_pvalue, LL_pvalue ] )
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Independence test, unknown 
\begin_inset Formula $p_{L}$
\end_inset


\end_layout

\begin_layout Standard
However, the problem is that we do not know
\begin_inset space ~
\end_inset


\begin_inset Formula $p_{L}$
\end_inset

.
 If we just estimate it from the data, run the tests and reject the hypothesis,
 it might have been because the
\begin_inset space ~
\end_inset


\begin_inset Formula $p_{L}$
\end_inset

 estimate is incorrect, rather than the sequence not being independent.
 
\end_layout

\begin_layout Standard
The strategy we devised is to estimate an interval of likely
\begin_inset space ~
\end_inset


\begin_inset Formula $p_{L}$
\end_inset

, and make sure that the test would fail for the whole range.
\end_layout

\begin_layout Standard
There is no closed form estimate for binomial confidence intervals; rather
 there are several approximations.
 We use the Clopper-Pearson interval method, that relates the binomial distribut
ion to the F distribution.
 This method is approximate but conservative.
 See the papers "Accurate confidence intervals for binomial proportion and
 Poisson rate estimation" and 
\begin_inset Quotes eld
\end_inset

Confidence intervals for the binomial parameter
\begin_inset Quotes erd
\end_inset

.
 It is also the method used by the binofit() Matlab function, that we ported
 to Matlab.
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

# rejecting independence, without knowing p_L
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

# Get a confidence interval
\end_layout

\begin_layout Plain Layout

p_L_lb, p_L_up = binofit(n_L, N, 0.01) 
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

# Run the test for the lower bound
\end_layout

\begin_layout Plain Layout

RL_pvalue_lb = binom_test(n_RL, n_R, p_L_lb)
\end_layout

\begin_layout Plain Layout

LL_pvalue_lb = binom_test(n_LL, n_L, p_L_lb)
\end_layout

\begin_layout Plain Layout

pvalue_lb = min( [ RL_pvalue_lb, LL_pvalue_lb ] )
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

# Run the test for the upper bound
\end_layout

\begin_layout Plain Layout

RL_pvalue_ub = binom_test(n_RL, n_R, p_L_ub)
\end_layout

\begin_layout Plain Layout

LL_pvalue_ub = binom_test(n_LL, n_L, p_L_ub)
\end_layout

\begin_layout Plain Layout

pvalue_ub = min( [ RL_pvalue_ub, LL_pvalue_ub ] )
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

# Require that the test fails for *both* extremes.
\end_layout

\begin_layout Plain Layout

pvalue = max([ pvalue_lb, pvalue_ub ])
\end_layout

\end_inset


\end_layout

\end_body
\end_document
